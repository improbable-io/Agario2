//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Option: missing-value detection (*Specified/ShouldSerialize*/Reset*) enabled
    
// Generated from: improbable/entity/physical/freeze_constraints.proto
namespace Schema.Improbable.Entity.Physical
{
  [global::System.Serializable, global::ProtoBuf.ProtoContract(Name=@"FreezeConstraints")]
  public partial class FreezeConstraints : global::ProtoBuf.IExtensible
  {
    public FreezeConstraints() {}
    

    private bool? _x;
    [global::ProtoBuf.ProtoMember(1, IsRequired = false, Name=@"x", DataFormat = global::ProtoBuf.DataFormat.Default)]
    public bool X
    {
      get { return _x?? default(bool); }
      set { _x = value; }
    }
    [global::System.Xml.Serialization.XmlIgnore]
    [global::System.ComponentModel.Browsable(false)]
    public bool XSpecified
    {
      get { return _x != null; }
      set { if (value == (_x== null)) _x = value ? X : (bool?)null; }
    }
    private bool ShouldSerializeX() { return XSpecified; }
    private void ResetX() { XSpecified = false; }
    

    private bool? _y;
    [global::ProtoBuf.ProtoMember(2, IsRequired = false, Name=@"y", DataFormat = global::ProtoBuf.DataFormat.Default)]
    public bool Y
    {
      get { return _y?? default(bool); }
      set { _y = value; }
    }
    [global::System.Xml.Serialization.XmlIgnore]
    [global::System.ComponentModel.Browsable(false)]
    public bool YSpecified
    {
      get { return _y != null; }
      set { if (value == (_y== null)) _y = value ? Y : (bool?)null; }
    }
    private bool ShouldSerializeY() { return YSpecified; }
    private void ResetY() { YSpecified = false; }
    

    private bool? _z;
    [global::ProtoBuf.ProtoMember(3, IsRequired = false, Name=@"z", DataFormat = global::ProtoBuf.DataFormat.Default)]
    public bool Z
    {
      get { return _z?? default(bool); }
      set { _z = value; }
    }
    [global::System.Xml.Serialization.XmlIgnore]
    [global::System.ComponentModel.Browsable(false)]
    public bool ZSpecified
    {
      get { return _z != null; }
      set { if (value == (_z== null)) _z = value ? Z : (bool?)null; }
    }
    private bool ShouldSerializeZ() { return ZSpecified; }
    private void ResetZ() { ZSpecified = false; }
    
    private global::ProtoBuf.IExtension extensionObject;
    global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
      { return global::ProtoBuf.Extensible.GetExtensionObject(ref extensionObject, createIfMissing); }
  }
  
}
// Generated from: improbable/entity/physical/rigidbody_data.proto
// Note: requires additional types generated from: improbable/entity_state.proto
// Note: requires additional types generated from: improbable/math/vector3d.proto
// Note: requires additional types generated from: improbable/entity/physical/freeze_constraints.proto
namespace Schema.Improbable.Entity.Physical
{
  [global::System.Serializable, global::ProtoBuf.ProtoContract(Name=@"Impulse")]
  public partial class Impulse : global::ProtoBuf.IExtensible
  {
    public Impulse() {}
    

    private Schema.Improbable.Math.Vector3d _value = null;
    [global::ProtoBuf.ProtoMember(1, IsRequired = false, Name=@"value", DataFormat = global::ProtoBuf.DataFormat.Default)]
    [global::System.ComponentModel.DefaultValue(null)]
    public Schema.Improbable.Math.Vector3d Value
    {
      get { return _value; }
      set { _value = value; }
    }
    private global::ProtoBuf.IExtension extensionObject;
    global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
      { return global::ProtoBuf.Extensible.GetExtensionObject(ref extensionObject, createIfMissing); }
  }
  
  [global::System.Serializable, global::ProtoBuf.ProtoContract(Name=@"SetVelocity")]
  public partial class SetVelocity : global::ProtoBuf.IExtensible
  {
    public SetVelocity() {}
    

    private Schema.Improbable.Math.Vector3d _value = null;
    [global::ProtoBuf.ProtoMember(1, IsRequired = false, Name=@"value", DataFormat = global::ProtoBuf.DataFormat.Default)]
    [global::System.ComponentModel.DefaultValue(null)]
    public Schema.Improbable.Math.Vector3d Value
    {
      get { return _value; }
      set { _value = value; }
    }
    private global::ProtoBuf.IExtension extensionObject;
    global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
      { return global::ProtoBuf.Extensible.GetExtensionObject(ref extensionObject, createIfMissing); }
  }
  
  [global::System.Serializable, global::ProtoBuf.ProtoContract(Name=@"RigidbodyDataData")]
  public partial class RigidbodyDataData : global::ProtoBuf.IExtensible
  {
    public RigidbodyDataData() {}
    

    private float? _mass;
    [global::ProtoBuf.ProtoMember(1, IsRequired = false, Name=@"mass", DataFormat = global::ProtoBuf.DataFormat.FixedSize)]
    public float Mass
    {
      get { return _mass?? default(float); }
      set { _mass = value; }
    }
    [global::System.Xml.Serialization.XmlIgnore]
    [global::System.ComponentModel.Browsable(false)]
    public bool MassSpecified
    {
      get { return _mass != null; }
      set { if (value == (_mass== null)) _mass = value ? Mass : (float?)null; }
    }
    private bool ShouldSerializeMass() { return MassSpecified; }
    private void ResetMass() { MassSpecified = false; }
    

    private Schema.Improbable.Math.Vector3d _force = null;
    [global::ProtoBuf.ProtoMember(2, IsRequired = false, Name=@"force", DataFormat = global::ProtoBuf.DataFormat.Default)]
    [global::System.ComponentModel.DefaultValue(null)]
    public Schema.Improbable.Math.Vector3d Force
    {
      get { return _force; }
      set { _force = value; }
    }

    private Schema.Improbable.Math.Vector3d _torque = null;
    [global::ProtoBuf.ProtoMember(3, IsRequired = false, Name=@"torque", DataFormat = global::ProtoBuf.DataFormat.Default)]
    [global::System.ComponentModel.DefaultValue(null)]
    public Schema.Improbable.Math.Vector3d Torque
    {
      get { return _torque; }
      set { _torque = value; }
    }

    private float? _drag;
    [global::ProtoBuf.ProtoMember(4, IsRequired = false, Name=@"drag", DataFormat = global::ProtoBuf.DataFormat.FixedSize)]
    public float Drag
    {
      get { return _drag?? default(float); }
      set { _drag = value; }
    }
    [global::System.Xml.Serialization.XmlIgnore]
    [global::System.ComponentModel.Browsable(false)]
    public bool DragSpecified
    {
      get { return _drag != null; }
      set { if (value == (_drag== null)) _drag = value ? Drag : (float?)null; }
    }
    private bool ShouldSerializeDrag() { return DragSpecified; }
    private void ResetDrag() { DragSpecified = false; }
    

    private float? _angularDrag;
    [global::ProtoBuf.ProtoMember(5, IsRequired = false, Name=@"angularDrag", DataFormat = global::ProtoBuf.DataFormat.FixedSize)]
    public float AngularDrag
    {
      get { return _angularDrag?? default(float); }
      set { _angularDrag = value; }
    }
    [global::System.Xml.Serialization.XmlIgnore]
    [global::System.ComponentModel.Browsable(false)]
    public bool AngularDragSpecified
    {
      get { return _angularDrag != null; }
      set { if (value == (_angularDrag== null)) _angularDrag = value ? AngularDrag : (float?)null; }
    }
    private bool ShouldSerializeAngularDrag() { return AngularDragSpecified; }
    private void ResetAngularDrag() { AngularDragSpecified = false; }
    

    private Schema.Improbable.Entity.Physical.FreezeConstraints _freezePosition = null;
    [global::ProtoBuf.ProtoMember(6, IsRequired = false, Name=@"freeze_position", DataFormat = global::ProtoBuf.DataFormat.Default)]
    [global::System.ComponentModel.DefaultValue(null)]
    public Schema.Improbable.Entity.Physical.FreezeConstraints FreezePosition
    {
      get { return _freezePosition; }
      set { _freezePosition = value; }
    }

    private Schema.Improbable.Entity.Physical.FreezeConstraints _freezeRotation = null;
    [global::ProtoBuf.ProtoMember(7, IsRequired = false, Name=@"freeze_rotation", DataFormat = global::ProtoBuf.DataFormat.Default)]
    [global::System.ComponentModel.DefaultValue(null)]
    public Schema.Improbable.Entity.Physical.FreezeConstraints FreezeRotation
    {
      get { return _freezeRotation; }
      set { _freezeRotation = value; }
    }

    private bool? _useGravity;
    [global::ProtoBuf.ProtoMember(8, IsRequired = false, Name=@"use_gravity", DataFormat = global::ProtoBuf.DataFormat.Default)]
    public bool UseGravity
    {
      get { return _useGravity?? default(bool); }
      set { _useGravity = value; }
    }
    [global::System.Xml.Serialization.XmlIgnore]
    [global::System.ComponentModel.Browsable(false)]
    public bool UseGravitySpecified
    {
      get { return _useGravity != null; }
      set { if (value == (_useGravity== null)) _useGravity = value ? UseGravity : (bool?)null; }
    }
    private bool ShouldSerializeUseGravity() { return UseGravitySpecified; }
    private void ResetUseGravity() { UseGravitySpecified = false; }
    

    private bool? _isKinematic;
    [global::ProtoBuf.ProtoMember(9, IsRequired = false, Name=@"is_kinematic", DataFormat = global::ProtoBuf.DataFormat.Default)]
    public bool IsKinematic
    {
      get { return _isKinematic?? default(bool); }
      set { _isKinematic = value; }
    }
    [global::System.Xml.Serialization.XmlIgnore]
    [global::System.ComponentModel.Browsable(false)]
    public bool IsKinematicSpecified
    {
      get { return _isKinematic != null; }
      set { if (value == (_isKinematic== null)) _isKinematic = value ? IsKinematic : (bool?)null; }
    }
    private bool ShouldSerializeIsKinematic() { return IsKinematicSpecified; }
    private void ResetIsKinematic() { IsKinematicSpecified = false; }
    

    private Schema.Improbable.Entity.Physical.RigidbodyDataData.InterpolationMode? _interpolation;
    [global::ProtoBuf.ProtoMember(10, IsRequired = false, Name=@"interpolation", DataFormat = global::ProtoBuf.DataFormat.TwosComplement)]
    public Schema.Improbable.Entity.Physical.RigidbodyDataData.InterpolationMode Interpolation
    {
      get { return _interpolation?? Schema.Improbable.Entity.Physical.RigidbodyDataData.InterpolationMode.None; }
      set { _interpolation = value; }
    }
    [global::System.Xml.Serialization.XmlIgnore]
    [global::System.ComponentModel.Browsable(false)]
    public bool InterpolationSpecified
    {
      get { return _interpolation != null; }
      set { if (value == (_interpolation== null)) _interpolation = value ? Interpolation : (Schema.Improbable.Entity.Physical.RigidbodyDataData.InterpolationMode?)null; }
    }
    private bool ShouldSerializeInterpolation() { return InterpolationSpecified; }
    private void ResetInterpolation() { InterpolationSpecified = false; }
    

    private Schema.Improbable.Entity.Physical.RigidbodyDataData.CollisionDetectionMode? _collisionDetection;
    [global::ProtoBuf.ProtoMember(11, IsRequired = false, Name=@"collision_detection", DataFormat = global::ProtoBuf.DataFormat.TwosComplement)]
    public Schema.Improbable.Entity.Physical.RigidbodyDataData.CollisionDetectionMode CollisionDetection
    {
      get { return _collisionDetection?? Schema.Improbable.Entity.Physical.RigidbodyDataData.CollisionDetectionMode.Discrete; }
      set { _collisionDetection = value; }
    }
    [global::System.Xml.Serialization.XmlIgnore]
    [global::System.ComponentModel.Browsable(false)]
    public bool CollisionDetectionSpecified
    {
      get { return _collisionDetection != null; }
      set { if (value == (_collisionDetection== null)) _collisionDetection = value ? CollisionDetection : (Schema.Improbable.Entity.Physical.RigidbodyDataData.CollisionDetectionMode?)null; }
    }
    private bool ShouldSerializeCollisionDetection() { return CollisionDetectionSpecified; }
    private void ResetCollisionDetection() { CollisionDetectionSpecified = false; }
    
    private readonly global::System.Collections.Generic.List<Schema.Improbable.Entity.Physical.Impulse> _impulse = new global::System.Collections.Generic.List<Schema.Improbable.Entity.Physical.Impulse>();
    [global::ProtoBuf.ProtoMember(1000, Name=@"impulse", DataFormat = global::ProtoBuf.DataFormat.Default)]
    public global::System.Collections.Generic.List<Schema.Improbable.Entity.Physical.Impulse> Impulse
    {
      get { return _impulse; }
    }
  
    private readonly global::System.Collections.Generic.List<Schema.Improbable.Entity.Physical.SetVelocity> _setVelocity = new global::System.Collections.Generic.List<Schema.Improbable.Entity.Physical.SetVelocity>();
    [global::ProtoBuf.ProtoMember(1001, Name=@"setVelocity", DataFormat = global::ProtoBuf.DataFormat.Default)]
    public global::System.Collections.Generic.List<Schema.Improbable.Entity.Physical.SetVelocity> SetVelocity
    {
      get { return _setVelocity; }
    }
  
    [global::ProtoBuf.ProtoContract(Name=@"CollisionDetectionMode")]
    public enum CollisionDetectionMode
    {
            
      [global::ProtoBuf.ProtoEnum(Name=@"Discrete", Value=0)]
      Discrete = 0,
            
      [global::ProtoBuf.ProtoEnum(Name=@"Continuous", Value=1)]
      Continuous = 1,
            
      [global::ProtoBuf.ProtoEnum(Name=@"ContinuousDynamic", Value=2)]
      ContinuousDynamic = 2
    }
  
    [global::ProtoBuf.ProtoContract(Name=@"InterpolationMode")]
    public enum InterpolationMode
    {
            
      [global::ProtoBuf.ProtoEnum(Name=@"None", Value=0)]
      None = 0,
            
      [global::ProtoBuf.ProtoEnum(Name=@"Interpolate", Value=1)]
      Interpolate = 1,
            
      [global::ProtoBuf.ProtoEnum(Name=@"Extrapolate", Value=2)]
      Extrapolate = 2
    }
  
    private global::ProtoBuf.IExtension extensionObject;
    global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
      { return global::ProtoBuf.Extensible.GetExtensionObject(ref extensionObject, createIfMissing); }
  }
  
}
// Generated from: improbable/entity/physical/rigidbody_engine_data.proto
// Note: requires additional types generated from: improbable/entity_state.proto
// Note: requires additional types generated from: improbable/math/vector3d.proto
namespace Schema.Improbable.Entity.Physical
{
  [global::System.Serializable, global::ProtoBuf.ProtoContract(Name=@"RigidbodyEngineDataData")]
  public partial class RigidbodyEngineDataData : global::ProtoBuf.IExtensible
  {
    public RigidbodyEngineDataData() {}
    

    private Schema.Improbable.Math.Vector3d _velocity = null;
    [global::ProtoBuf.ProtoMember(1, IsRequired = false, Name=@"velocity", DataFormat = global::ProtoBuf.DataFormat.Default)]
    [global::System.ComponentModel.DefaultValue(null)]
    public Schema.Improbable.Math.Vector3d Velocity
    {
      get { return _velocity; }
      set { _velocity = value; }
    }

    private Schema.Improbable.Math.Vector3d _angularVelocity = null;
    [global::ProtoBuf.ProtoMember(2, IsRequired = false, Name=@"angular_velocity", DataFormat = global::ProtoBuf.DataFormat.Default)]
    [global::System.ComponentModel.DefaultValue(null)]
    public Schema.Improbable.Math.Vector3d AngularVelocity
    {
      get { return _angularVelocity; }
      set { _angularVelocity = value; }
    }

    private Schema.Improbable.Math.Vector3d _relativeCentreOfMass = null;
    [global::ProtoBuf.ProtoMember(3, IsRequired = false, Name=@"relative_centre_of_mass", DataFormat = global::ProtoBuf.DataFormat.Default)]
    [global::System.ComponentModel.DefaultValue(null)]
    public Schema.Improbable.Math.Vector3d RelativeCentreOfMass
    {
      get { return _relativeCentreOfMass; }
      set { _relativeCentreOfMass = value; }
    }

    private bool? _isSleeping;
    [global::ProtoBuf.ProtoMember(4, IsRequired = false, Name=@"is_sleeping", DataFormat = global::ProtoBuf.DataFormat.Default)]
    public bool IsSleeping
    {
      get { return _isSleeping?? default(bool); }
      set { _isSleeping = value; }
    }
    [global::System.Xml.Serialization.XmlIgnore]
    [global::System.ComponentModel.Browsable(false)]
    public bool IsSleepingSpecified
    {
      get { return _isSleeping != null; }
      set { if (value == (_isSleeping== null)) _isSleeping = value ? IsSleeping : (bool?)null; }
    }
    private bool ShouldSerializeIsSleeping() { return IsSleepingSpecified; }
    private void ResetIsSleeping() { IsSleepingSpecified = false; }
    
    private global::ProtoBuf.IExtension extensionObject;
    global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
      { return global::ProtoBuf.Extensible.GetExtensionObject(ref extensionObject, createIfMissing); }
  }
  
}